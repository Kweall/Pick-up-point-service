volumes:
  postgresql_data:


services:
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    container_name: postgres

  kafka-ui:
    container_name: route256-kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      DYNAMIC_CONFIG_ENABLED: "true"

  kafka0:
    container_name: route256-kafka
    image: confluentinc/cp-kafka:7.7.1.amd64
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk' #https://sleeplessbeastie.eu/2021/10/22/how-to-generate-kafka-cluster-id/

  kafka-init-topics:
    container_name: route256-init-topics
    image: confluentinc/cp-kafka:7.7.1.amd64
    depends_on:
      - kafka0
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka0:29092 1 30 && \
      kafka-topics --create --topic pvz.events-log --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092'"

  # go-consumer-1:
  #   container_name: route256-go-consumer-1
  #   image: go-consumer-image
  #   build:
  #     context: ./../../
  #     dockerfile: ./build/dev/consumer-group/Dockerfile

  # go-consumer-2:
  #   container_name: route256-go-consumer-2
  #   image: go-consumer-image
  #   depends_on:
  #     - go-consumer-1

  # go-consumer-3:
  #   container_name: route256-go-consumer-3
  #   image: go-consumer-image
  #   depends_on:
  #     - go-consumer-1


  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
    environment:
      - PSQL_DSN=postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable
      - httpHost=127.0.0.1:7000
      - grpcHost=127.0.0.1:7001
      - adminHost127.0.0.1:7002
    ports:
      - "8080:8080"
    container_name: go_app
    command:
      - /bin/sh
      - -c
      - |
        env
        tail -f /dev/null
