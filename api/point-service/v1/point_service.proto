syntax = "proto3";

package point;

option go_package = "./homework/api/point-service/v1;point_service";

//import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/api/field_behavior.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Выдача заказов";
        version: "1.0.0";
        description: "Сервис выполняет функции выдачи и принятия заказов для множества пользователей";
    };
    host: "localhost:7000";
    schemes: HTTP;
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
        security: {
            key: "api-token",
            value: {
                in: IN_HEADER;
                type: TYPE_API_KEY;
                name: "x-api-token";
                description: "Авторизационный токен";
            }
        };
    };
};

service PointService{
    rpc AddOrder (AddOrderRequest) returns (AddOrderResponse) {
        option (google.api.http) = {
            post: "/AddOrder"
            body: "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Добавление заказа";
            description: "Принимает идентификатор клиента и заказа, дату истечения хранения заказа, вес, цену, вариант упаковки и предложение для дополнительной пленки";
            security: {
                security_requirement: {
                    key: "api-token";
                    value: {};
                };
            };
        };
    }

    rpc DeleteOrder (DeleteOrderRequest) returns (DeleteOrderResponse) {
        option (google.api.http) = {
            post: "/DeleteOrder"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Удаление заказа";
            description: "Принимает идентификатор заказа и удаляет его";
            security: {
                security_requirement: {
                    key: "api-token";
                    value: {};
                };
            };
        };
    }

    rpc GiveOrder (GiveOrderRequest) returns (GiveOrderResponse) {
        option (google.api.http) = {
            post: "/GiveOrder"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Выдача заказов";
            description: "Принимает идентификатор(-ы) заказа(-ов) и фиксирует выдачу одному клиенту";
        };
    }

    rpc GetOrders (GetOrdersRequest) returns (GetOrdersResponse) {
        option (google.api.http) = {
            get: "/GetOrders"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Получение списка заказов";
            description: "Принимает идентификатор клиента и выдает список его заказов";
        };
    }

    rpc AcceptReturn (AcceptReturnRequest) returns (AcceptReturnResponse) {
        option (google.api.http) = {
            post: "/AcceptReturn"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Принятие возврата заказа";
            description: "Принимает идентификатор клиента и заказа, фиксирует дату возврата";
        };
    }

    rpc GetReturns (GetReturnsRequest) returns (GetReturnsResponse) {
        option (google.api.http) = {
            get: "/GetReturns"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary: "Получение списка возвратов";
            description: "Принимает страницу списка общих возвратов";
        };
    }
}

message Order{
    int64 order_id = 1;
    int64 client_id = 2;
    google.protobuf.Timestamp created_at = 3;
    google.protobuf.Timestamp expired_at = 4;
    google.protobuf.Timestamp received_at = 5;
    google.protobuf.Timestamp returned_at = 6;
    float weight = 7;
    int64 price = 8;
    string packaging = 9;
    bool additional_film = 10;
}

message OrderHistory{
    int64 order_id = 1;
}

message AddOrderRequest{
    int64 client_id = 1 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
    int64 order_id = 2 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
    google.protobuf.Timestamp created_at = 3 [
        (google.api.field_behavior) = REQUIRED
    ];
    google.protobuf.Timestamp expired_at = 4 [
        (google.api.field_behavior) = REQUIRED
    ];
    float weight = 5 [
        (validate.rules).float.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
    int64 price = 6 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
    string packaging = 7 [
        (validate.rules).string = {
            min_len : 3
            max_len : 15
        },
        (google.api.field_behavior) = REQUIRED
    ];
    optional bool additional_film = 8 [
        (google.api.field_behavior) = OPTIONAL
    ];
}

message AddOrderResponse{

}

message DeleteOrderRequest{
    int64 order_id = 1 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
}

message DeleteOrderResponse{

}

message GiveOrderRequest{
    repeated int64 order_ids = 1 [
        (validate.rules).repeated = {min_items: 1},
        (google.api.field_behavior) = REQUIRED
    ];
}

message GiveOrderResponse{

}

message GetOrdersRequest{
    int64 client_id = 1 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
}

message GetOrdersResponse{
    repeated Order orders = 1;
}

message AcceptReturnRequest{
    int64 client_id = 1 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
    int64 order_id = 2 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
}

message AcceptReturnResponse{

}

message GetReturnsRequest{
    int64 page = 1 [
        (validate.rules).int64.gt = 0,
        (google.api.field_behavior) = REQUIRED
    ];
}

message GetReturnsResponse{
    repeated Order orders = 1;
}